import"./modulepreload-polyfill-B5Qt9EMX.js";import{m as J,p as X,C as Z,s as ee,i as te,H as ae,d as ne,R as se,k,j as ie,t as oe,g as N,h as re,I as E,q as F,r as H,u as ce,v as le,w as $,x as O,y as B,l as T,o as j,z as ue}from"./template-B-VUOAYT.js";import{t as q}from"./index-DAUyDdIw.js";const V=async(t,a,n)=>{const l=["OwnerHistory","ObjectPlacement","CompositionType"],i={...{groupName:"Attributes",includeClass:!1},...n},{groupName:c,includeClass:u}=i,e=await t.getProperties(a)??{},o={data:{Name:c}};u&&(o.children||(o.children=[]),o.children.push({data:{Name:"Class",Value:j[e.type]}}));for(const p in e){if(l.includes(p))continue;const r=e[p];if(r&&typeof r=="object"&&!Array.isArray(r)){if(r.type===ue)continue;const g={data:{Name:p,Value:r.value}};o.children||(o.children=[]),o.children.push(g)}}return o},pe=async(t,a)=>{var l,s;const n={data:{Name:"Classifications"}};for(const i of a){const c=await t.getProperties(i);if(c&&c.type===B){const{value:u}=c.ReferencedSource,e=await t.getProperties(u);if(!e)continue;const o={data:{Name:e.Name.value},children:[{data:{Name:"Identification",Value:((l=c.Identification)==null?void 0:l.value)||((s=c.ItemReference)==null?void 0:s.value)}},{data:{Name:"Name",Value:c.Name.value}}]};n.children||(n.children=[]),n.children.push(o)}}return n},de=async(t,a)=>{const n={data:{Name:"Property Sets"}};for(const l of a){const s=await t.getProperties(l);if(!s)continue;const i={data:{Name:s.Name.value}};if(s.type===E){for(const c of s.HasProperties){const{value:u}=c,e=await t.getProperties(u);if(!e)continue;const o=Object.keys(e).find(r=>r.includes("Value"));if(!(o&&e[o]))continue;const p={data:{Name:e.Name.value,Value:e[o].value}};i.children||(i.children=[]),i.children.push(p)}i.children&&(n.children||(n.children=[]),n.children.push(i))}}return n},fe=async(t,a)=>{const n={data:{Name:"Quantity Sets"}};for(const l of a){const s=await t.getProperties(l);if(!s)continue;const i={data:{Name:s.Name.value}};if(s.type===F){for(const c of s.Quantities){const{value:u}=c,e=await t.getProperties(u);if(!e)continue;const o=Object.keys(e).find(r=>r.includes("Value"));if(!(o&&e[o]))continue;const p={data:{Name:e.Name.value,Value:e[o].value}};i.children||(i.children=[]),i.children.push(p)}i.children&&(n.children||(n.children=[]),n.children.push(i))}}return n},me=async(t,a)=>{const n={data:{Name:"Materials"}};for(const l of a){const s=await t.getProperties(l);if(s&&s.type===H){const i=s.ForLayerSet.value,c=await t.getProperties(i);if(!c)continue;for(const u of c.MaterialLayers){const{value:e}=u,o=await t.getProperties(e);if(!o)continue;const p=await t.getProperties(o.Material.value);if(!p)continue;const r={data:{Name:"Layer"},children:[{data:{Name:"Thickness",Value:o.LayerThickness.value}},{data:{Name:"Material",Value:p.Name.value}}]};n.children||(n.children=[]),n.children.push(r)}}if(s&&s.type===O)for(const i of s.Materials){const{value:c}=i,u=await t.getProperties(c);if(!u)continue;const e={data:{Name:"Name",Value:u.Name.value}};n.children||(n.children=[]),n.children.push(e)}if(s&&s.type===$){const i=await t.getProperties(l);if(!i)continue;const c={data:{Name:"Name",Value:i.Name.value}};n.children||(n.children=[]),n.children.push(c)}}return n},he=async(t,a)=>{var c;const n=t.get(k),l=t.get(re),s=[],i=[];console.log("fragmentIdMap in templates",a);for(const u in a){const e=l.list.get(u);if(!(e&&e.group))continue;const o=e.group,p=i.find(r=>r.model===o);if(p)for(const r of a[u])p.expressIDs.add(r);else{const r={model:o,expressIDs:new Set(a[u])};i.push(r)}}for(const u in i){const{model:e,expressIDs:o}=i[u],p=n.relationMaps[e.uuid];if(p)for(const r of o){const g=await e.getProperties(r);if(console.log(g),!g)continue;const h={data:{Name:(c=g.Name)==null?void 0:c.value}};s.push(h);const K=await V(e,r,{includeClass:!0});if(h.children||(h.children=[]),h.children.push(K),!p.get(r))continue;const C=n.getEntityRelations(e,r,"IsDefinedBy");if(C){const R=C.filter(async b=>{const d=await e.getProperties(b);return d?d.type===E:!1}),y=await de(e,R);y.children&&h.children.push(y);const P=C.filter(async b=>{const d=await e.getProperties(b);return d?d.type===F:!1}),I=await fe(e,P);I.children&&h.children.push(I)}const v=n.getEntityRelations(e,r,"HasAssociations");if(v){const R=v.filter(async b=>{const d=await e.getProperties(b);return d?d.type===H||d.type===ce||d.type===le||d.type===$||d.type===O:!1}),y=await me(e,R);y.children&&h.children.push(y);const P=v.filter(async b=>{const d=await e.getProperties(b);return d?d.type===B:!1}),I=await pe(e,P);I.children&&h.children.push(I)}const M=n.getEntityRelations(e,r,"ContainedInStructure");if(M){const R=M[0],y=await V(e,R,{groupName:"SpatialContainer"});h.children.push(y)}}}return s};J.init();const S=document.createElement("bim-viewport"),f=new X,ye=f.get(Z),w=ye.create(),Y=new ee(f);Y.setup();w.scene=Y;const Q=new te(f,S);w.renderer=Q;const x=new ae(f);w.camera=x;x.controls.setLookAt(10,5.5,5,-4,-1,-6.5);S.addEventListener("resize",()=>{Q.resize(),x.updateAspect()});f.init();const be=f.get(ne);be.create(w);const U=f.get(se);await U.setup();const we=await fetch("http://localhost:8000/sample_mep.ifc"),ge=await we.arrayBuffer(),Re=new Uint8Array(ge),W=await U.load(Re);w.scene.three.add(W);const Ie=f.get(k);await Ie.process(W);const[m,z]=q.elementProperties({components:f,fragmentIdMap:{}});m.preserveStructureOnFilter=!0;m.indentationInText=!1;const A={padding:"0.25rem",borderRadius:"0.25rem"},Ae={Entity:t=>{let a={};return t===j[E]&&(a={...A,backgroundColor:"purple",color:"white"}),String(t).includes("IFCWALL")&&(a={...A,backgroundColor:"green",color:"white"}),N`<bim-label style=${T(a)}>${t}</bim-label>`},PredefinedType:t=>{const a=["#1c8d83","#3c1c8d","#386c19","#837c24"],n=Math.floor(Math.random()*a.length),l=a[n],s={...A,backgroundColor:l,color:"white"};return N`<bim-label style=${T(s)}>${t}</bim-label>`},NominalValue:t=>{let a={};return typeof t=="boolean"&&t===!1&&(a={...A,backgroundColor:"#b13535",color:"white"}),typeof t=="boolean"&&t===!0&&(a={...A,backgroundColor:"#18882c",color:"white"}),N`<bim-label style=${T(a)}>${t}</bim-label>`}},[Ne,G]=q.entityAttributes({components:f,fragmentIdMap:{},tableDefinition:Ae,attributesToInclude:()=>["Name","ContainedInStructure","HasProperties","HasPropertySets",a=>a.includes("Value"),a=>a.startsWith("Material"),a=>a.startsWith("Relating"),a=>{const n=["IsGroupedBy","IsDecomposedBy"];return a.startsWith("Is")&&!n.includes(a)}]}),D=f.get(ie);D.setup({world:w});D.events.select.onHighlight.add(t=>{console.log("fragmentIdMap",t),he(f,t).then(a=>{console.log(a)}),z({fragmentIdMap:t}),G({fragmentIdMap:t})});D.events.select.onClear.add(()=>{z({fragmentIdMap:{}}),G({fragmentIdMap:{}})});const Ce=oe.create(()=>{const t=l=>{const s=l.target;m.queryString=s.value!==""?s.value:null},a=l=>{const s=l.target;m.expanded=!m.expanded,s.label=m.expanded?"Collapse":"Expand"},n=async()=>{await navigator.clipboard.writeText(m.tsv)};return console.log("propertiesTable",m),N`
    <bim-panel label="Properties">
      <bim-panel-section label="Element Data">
        <div style="display: flex; gap: 0.5rem;">
          <bim-button @click=${a} label=${m.expanded?"Collapse":"Expand"}></bim-button> 
          <bim-button @click=${n} label="Copy as TSV"></bim-button> 
        </div> 
        <bim-text-input @input=${t} placeholder="Search Property" debounce="250"></bim-text-input>
        ${m}
        <br/>
  
      </bim-panel-section>
      <bim-panel-section label="Attribute Data">
          ${Ne}
      </bim-panel-section>
    </bim-panel>
  `}),L=document.createElement("bim-grid");L.layouts={main:{template:`
    "propertiesPanel viewport"
    /25rem 2fr
    `,elements:{propertiesPanel:Ce,viewport:S}}};L.layout="main";document.body.append(L);
