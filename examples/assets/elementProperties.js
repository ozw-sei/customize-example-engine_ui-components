import"./modulepreload-polyfill-B5Qt9EMX.js";import{m as z,p as U,C as K,s as G,i as _,H as J,d as W,R as X,k as D,j as Z,t as ee,g as te,h as ae,I as L,q as M,r as V,u as ne,v as se,w as F,x as H,y as k,o as ie,z as oe}from"./template-B-VUOAYT.js";import{t as re}from"./index-DAUyDdIw.js";const S=async(s,c,t)=>{const u=["OwnerHistory","ObjectPlacement","CompositionType"],n={...{groupName:"Attributes",includeClass:!1},...t},{groupName:r,includeClass:l}=n,e=await s.getProperties(c)??{},i={data:{Name:r}};l&&(i.children||(i.children=[]),i.children.push({data:{Name:"Class",Value:ie[e.type]}}));for(const p in e){if(u.includes(p))continue;const o=e[p];if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.type===oe)continue;const R={data:{Name:p,Value:o.value}};i.children||(i.children=[]),i.children.push(R)}}return i},ce=async(s,c)=>{var u,a;const t={data:{Name:"Classifications"}};for(const n of c){const r=await s.getProperties(n);if(r&&r.type===k){const{value:l}=r.ReferencedSource,e=await s.getProperties(l);if(!e)continue;const i={data:{Name:e.Name.value},children:[{data:{Name:"Identification",Value:((u=r.Identification)==null?void 0:u.value)||((a=r.ItemReference)==null?void 0:a.value)}},{data:{Name:"Name",Value:r.Name.value}}]};t.children||(t.children=[]),t.children.push(i)}}return t},le=async(s,c)=>{const t={data:{Name:"Property Sets"}};for(const u of c){const a=await s.getProperties(u);if(!a)continue;const n={data:{Name:a.Name.value}};if(a.type===L){for(const r of a.HasProperties){const{value:l}=r,e=await s.getProperties(l);if(!e)continue;const i=Object.keys(e).find(o=>o.includes("Value"));if(!(i&&e[i]))continue;const p={data:{Name:e.Name.value,Value:e[i].value}};n.children||(n.children=[]),n.children.push(p)}n.children&&(t.children||(t.children=[]),t.children.push(n))}}return t},ue=async(s,c)=>{const t={data:{Name:"Quantity Sets"}};for(const u of c){const a=await s.getProperties(u);if(!a)continue;const n={data:{Name:a.Name.value}};if(a.type===M){for(const r of a.Quantities){const{value:l}=r,e=await s.getProperties(l);if(!e)continue;const i=Object.keys(e).find(o=>o.includes("Value"));if(!(i&&e[i]))continue;const p={data:{Name:e.Name.value,Value:e[i].value}};n.children||(n.children=[]),n.children.push(p)}n.children&&(t.children||(t.children=[]),t.children.push(n))}}return t},pe=async(s,c)=>{const t={data:{Name:"Materials"}};for(const u of c){const a=await s.getProperties(u);if(a&&a.type===V){const n=a.ForLayerSet.value,r=await s.getProperties(n);if(!r)continue;for(const l of r.MaterialLayers){const{value:e}=l,i=await s.getProperties(e);if(!i)continue;const p=await s.getProperties(i.Material.value);if(!p)continue;const o={data:{Name:"Layer"},children:[{data:{Name:"Thickness",Value:i.LayerThickness.value}},{data:{Name:"Material",Value:p.Name.value}}]};t.children||(t.children=[]),t.children.push(o)}}if(a&&a.type===H)for(const n of a.Materials){const{value:r}=n,l=await s.getProperties(r);if(!l)continue;const e={data:{Name:"Name",Value:l.Name.value}};t.children||(t.children=[]),t.children.push(e)}if(a&&a.type===F){const n=await s.getProperties(u);if(!n)continue;const r={data:{Name:"Name",Value:n.Name.value}};t.children||(t.children=[]),t.children.push(r)}}return t},de=async(s,c)=>{var r;const t=s.get(D),u=s.get(ae),a=[],n=[];console.log("fragmentIdMap in templates",c);for(const l in c){const e=u.list.get(l);if(!(e&&e.group))continue;const i=e.group,p=n.find(o=>o.model===i);if(p)for(const o of c[l])p.expressIDs.add(o);else{const o={model:i,expressIDs:new Set(c[l])};n.push(o)}}for(const l in n){const{model:e,expressIDs:i}=n[l],p=t.relationMaps[e.uuid];if(p)for(const o of i){const R=await e.getProperties(o);if(console.log(R),!R)continue;const h={data:{Name:(r=R.Name)==null?void 0:r.value}};a.push(h);const B=await S(e,o,{includeClass:!0});if(h.children||(h.children=[]),h.children.push(B),!p.get(o))continue;const b=t.getEntityRelations(e,o,"IsDefinedBy");if(b){const A=b.filter(async y=>{const d=await e.getProperties(y);return d?d.type===L:!1}),w=await le(e,A);w.children&&h.children.push(w);const N=b.filter(async y=>{const d=await e.getProperties(y);return d?d.type===M:!1}),I=await ue(e,N);I.children&&h.children.push(I)}const v=t.getEntityRelations(e,o,"HasAssociations");if(v){const A=v.filter(async y=>{const d=await e.getProperties(y);return d?d.type===V||d.type===ne||d.type===se||d.type===F||d.type===H:!1}),w=await pe(e,A);w.children&&h.children.push(w);const N=v.filter(async y=>{const d=await e.getProperties(y);return d?d.type===k:!1}),I=await ce(e,N);I.children&&h.children.push(I)}const x=t.getEntityRelations(e,o,"ContainedInStructure");if(x){const A=x[0],w=await S(e,A,{groupName:"SpatialContainer"});h.children.push(w)}}}return a};z.init();const C=document.createElement("bim-viewport"),f=new U,fe=f.get(K),g=fe.create(),O=new G(f);O.setup();g.scene=O;const j=new _(f,C);g.renderer=j;const E=new J(f);g.camera=E;E.controls.setLookAt(10,5.5,5,-4,-1,-6.5);C.addEventListener("resize",()=>{j.resize(),E.updateAspect()});f.init();const me=f.get(W);me.create(g);const q=f.get(X);await q.setup();const he=await fetch("https://thatopen.github.io/engine_ui-components/resources/small.ifc"),we=await he.arrayBuffer(),ye=new Uint8Array(we),Y=await q.load(ye);g.scene.three.add(Y);const ge=f.get(D);await ge.process(Y);const[m,$]=re.elementProperties({components:f,fragmentIdMap:{}});m.preserveStructureOnFilter=!0;m.indentationInText=!1;const P=f.get(Z);P.setup({world:g});P.events.select.onHighlight.add(s=>{console.log("fragmentIdMap",s),de(f,s).then(c=>{console.log(c)}),$({fragmentIdMap:s})});P.events.select.onClear.add(()=>$({fragmentIdMap:{}}));const Re=ee.create(()=>{const s=u=>{const a=u.target;m.queryString=a.value!==""?a.value:null},c=u=>{const a=u.target;m.expanded=!m.expanded,a.label=m.expanded?"Collapse":"Expand"},t=async()=>{await navigator.clipboard.writeText(m.tsv)};return console.log("propertiesTable",m),te`
    <bim-panel label="Properties">
      <bim-panel-section label="Element Data">
        <div style="display: flex; gap: 0.5rem;">
          <bim-button @click=${c} label=${m.expanded?"Collapse":"Expand"}></bim-button> 
          <bim-button @click=${t} label="Copy as TSV"></bim-button> 
        </div> 
        <bim-text-input @input=${s} placeholder="Search Property" debounce="250"></bim-text-input>
        ${m}
      </bim-panel-section>
    </bim-panel>
  `}),T=document.createElement("bim-grid");T.layouts={main:{template:`
    "propertiesPanel viewport"
    /25rem 1fr
    `,elements:{propertiesPanel:Re,viewport:C}}};T.layout="main";document.body.append(T);
